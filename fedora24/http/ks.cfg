lang en_US.UTF-8
keyboard 'us'
rootpw vagrant
auth --enableshadow --passalgo=sha512
timezone UTC

# Optional settings
install
cdrom
network --bootproto=dhcp
selinux --disabled
firewall --disabled


zerombr
clearpart --all --initlabel

#fedora server auto part makes a 15gb file partition and leaves the rest
# in as un partitioned space...todo make this autogrow the roop partition
part /boot --fstype="ext4" --ondisk=sda --size=500
part pv.218 --fstype="lvmpv" --ondisk=sda --size=101896
volgroup fedora --pesize=4096 pv.218
logvol / --fstype="xfs" --size=75416 --name=root --vgname=fedora
logvol /tmp --fstype="xfs" --size=4096 --name=tmp --vgname=fedora
logvol swap --fstype="swap" --size=8064 --name=swap --vgname=fedora
logvol /home --fstype="xfs" --size=14304 --name=home --vgname=fedora

services --enabled network
reboot

%packages --ignoremissing --excludedocs
@Base
@Core
openssh-clients
sudo

%end

%post --log=/root/ks-post.log

/usr/sbin/groupadd vagrant
/usr/sbin/groupadd docker
/usr/sbin/useradd vagrant -g vagrant -G docker
echo "vagrant"|passwd --stdin vagrant

cat <<-EOF > /etc/yum.repos.d/docker.repo
	[dockerrepo]
	name=Docker Repository
	baseurl=https://yum.dockerproject.org/repo/main/fedora/24/
	enabled=1
	gpgcheck=1
	gpgkey=https://yum.dockerproject.org/gpg
	EOF

cat <<-EOF > /etc/yum.repos.d/mongo.repo
	[mongodb-org-3.2]
	name=MongoDB Repository
	baseurl=https://repo.mongodb.org/yum/redhat/7/mongodb-org/3.2/x86_64/
	gpgcheck=1
	enabled=1
	gpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc
	EOF

#Update dnf
dnf update -y

#start the dev tool chain setup
dnf -y group install "Development Tools"

#install all the headers (well the ones i want)
dnf install -y openssl-devel readline-devel zlib-devel kernel-headers kernel-devel dkms

#install various utilities
dnf install -y net-tools htop rsync unzip dos2unix wget git curl tmux zsh bzip2

#prepare for virtual box additions
dnf install -y device-mapper device-mapper-event device-mapper-libs device-mapper-event-libs

#docker things 
dnf install -y python python-devel libcgroup libtool-ltdl libseccomp policycoreutils-python python34 python-pip docker-engine 

#other dev things 
dnf install -y  ruby ruby-devel mongodb-org vim-enhanced 

#lets try a UI
dnf -y group install "Fedora Workstation" 

#slack dependencies
dnf -y install libXScrnSaver libappindicator


dnf clean all

#Update certs
sudo wget -O/etc/pki/tls/certs/ca-bundle.crt --no-check-certificate http://curl.haxx.se/ca/cacert.pem

#fix sudo for vagrant
echo "vagrant        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers
mkdir -p /home/vagrant/.ssh
chmod -R 700 /home/vagrant/.ssh
curl -o /home/vagrant/.ssh/authorized_keys https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub
chmod 0600 /home/vagrant/.ssh/authorized_keys
chown -R vagrant.vagrant /home/vagrant/.ssh

#make docker start on boot
systemctl enable docker

#making life easier
gem install homesick
gem install pivotal_git_scripts

pip install -U pip
pip install virtualenv
pip install backports.ssl_match_hostname â€“-upgrade
pip install docker-compose

su - vagrant -c 'wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash'
su - vagrant -c 'nvm install 6.7.0'
su - vagrant -c 'echo "exec /usr/bin/gnome-session" >> ~/.xinitrc'
su - vagrant -c 'mkdir ~/.config'
su - vagrant -c 'echo "yes" >> ~/.config/gnome-initial-setup-done'

%end
